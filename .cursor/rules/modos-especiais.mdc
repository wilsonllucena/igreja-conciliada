---
description: Protocolos para Modo Planejador e Modo Depurador
---

# Modos Especiais de Trabalho

## Modo Planejador üéØ

### Quando Ativar
- Quando solicitado explicitamente: "Entre no Modo Planejador"
- Para mudan√ßas complexas que afetam m√∫ltiplos arquivos
- Quando o escopo da altera√ß√£o n√£o est√° claro

### Protocolo Obrigat√≥rio

1. **An√°lise Profunda**: Reflita sobre as mudan√ßas solicitadas
2. **Mapeamento Completo**: Analise o c√≥digo existente para mapear TODO o escopo
3. **Perguntas Esclarecedoras**: Fa√ßa 4-6 perguntas baseadas nas descobertas:
   - Qual o comportamento esperado em cen√°rios espec√≠ficos?
   - Como deve ser tratado [caso espec√≠fico encontrado]?
   - Devemos manter compatibilidade com [funcionalidade existente]?
   - Qual a prioridade entre [op√ß√£o A] e [op√ß√£o B]?

4. **Plano Abrangente**: Ap√≥s as respostas, elabore um plano detalhado
5. **Aprova√ß√£o**: Aguarde aprova√ß√£o expl√≠cita antes de implementar
6. **Execu√ß√£o Faseada**: Implemente todas as etapas do plano
7. **Acompanhamento**: Ap√≥s cada fase, reporte progresso e pr√≥ximos passos

### Estrutura do Plano
```markdown
## Plano de Implementa√ß√£o

### An√°lise do C√≥digo Atual
- [Arquivo X] atualmente faz Y
- [Servi√ßo Z] seria impactado porque...

### Fases de Implementa√ß√£o
1. **Fase 1**: [Descri√ß√£o] - Arquivos: [...] - Tempo estimado: [...]
2. **Fase 2**: [Descri√ß√£o] - Arquivos: [...] - Tempo estimado: [...]
3. **Fase N**: [Descri√ß√£o] - Arquivos: [...] - Tempo estimado: [...]

### Riscos e Considera√ß√µes
- Risco 1: [descri√ß√£o] - Mitiga√ß√£o: [...]
- Risco 2: [descri√ß√£o] - Mitiga√ß√£o: [...]
```

## Modo Depurador üêõ

### Quando Ativar
- Quando solicitado explicitamente: "Entre no Modo Depurador"
- Para bugs complexos ou comportamentos inesperados
- Quando a causa raiz n√£o √© √≥bvia

### Sequ√™ncia Obrigat√≥ria

1. **Reflex√£o Inicial**: Liste 5-7 poss√≠veis causas do problema
2. **Prioriza√ß√£o**: Reduza para 1-2 causas mais prov√°veis
3. **Logging Estrat√©gico**: Adicione logs para validar hip√≥teses:
   - Entrada de dados
   - Transforma√ß√µes intermedi√°rias
   - Estados de vari√°veis cr√≠ticas
   - Fluxo de controle

4. **Coleta de Evid√™ncias**:
   - Logs do console (se aplic√°vel)
   - Logs de rede (se aplic√°vel) 
   - Logs do servidor
   - Estados de vari√°veis

5. **An√°lise Abrangente**: Reflita profundamente sobre as evid√™ncias
6. **Diagn√≥stico**: Produza an√°lise completa do problema
7. **Solu√ß√£o**: Implemente a corre√ß√£o
8. **Limpeza**: Pe√ßa aprova√ß√£o para remover logs tempor√°rios

### Template de Debugging
```markdown
## An√°lise de Bug

### Poss√≠veis Causas Identificadas
1. [Causa 1] - Probabilidade: Alta/M√©dia/Baixa
2. [Causa 2] - Probabilidade: Alta/M√©dia/Baixa
...

### Hip√≥teses Priorit√°rias
1. [Hip√≥tese principal] - Porque: [evid√™ncia]
2. [Hip√≥tese secund√°ria] - Porque: [evid√™ncia]

### Logs Adicionados
- [Arquivo]: linha X - para verificar [vari√°vel Y]
- [Arquivo]: linha Z - para rastrear [fluxo W]

### An√°lise dos Logs
[An√°lise detalhada baseada nos logs coletados]

### Diagn√≥stico Final
[Causa raiz identificada e justificativa]

### Plano de Corre√ß√£o
[Mudan√ßas espec√≠ficas necess√°rias]
```

## Integra√ß√£o com Projeto Atual

### Arquivos Relevantes para Debugging
- **Services**: [services/](mdc:src/services/) - L√≥gica de neg√≥cio principal
- **Providers**: [providers/](mdc:src/providers/) - Integra√ß√µes que podem falhar
- **Entities**: [entities/](mdc:src/entities/) - Problemas de mapeamento de dados
- **Utils**: [utils/](mdc:src/utils/) - Utilit√°rios compartilhados

### Logs Espec√≠ficos do Projeto
- Sempre considere logs do [Taya Provider](mdc:src/providers/taya.provider.ts)
- Monitore opera√ß√µes de banco via entities
- Verifique processamento de arquivos em services

---

*Estes modos garantem abordagem sistem√°tica para planejamento e debugging, mantendo qualidade e controle em situa√ß√µes complexas.*